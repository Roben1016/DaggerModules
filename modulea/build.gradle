buildscript {
    repositories {
        maven {
            url uri('../release')
        }
    }
    dependencies {
        classpath 'com.xud:comgradle:1.0'
    }
}

apply plugin: 'com.xud.comgradle'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    dataBinding {
        enabled = true
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        if (isBuildModule.toBoolean()) {
            multiDexEnabled true
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }


    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                proguardFile 'proguard-rules.pro'
            }
        }
    }

    resourcePrefix "module_a_"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
    testImplementation "junit:junit:${rootProject.ext.junitVersion}"

    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.dagger_version}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterknife_version}"
    annotationProcessor "com.alibaba:arouter-compiler:${rootProject.ext.arouter_compiler_version}"
    api project(':componentservice')
}
